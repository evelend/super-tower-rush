<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tiempopiso=0
scr_agregagraph(50)



tiempopiso1=0
scr_agregagraph2(50)

tpoderesp1=0
tpoderesp2=0

// The basic array stuff. All good, but here's
// some more new variables

graph_x = 260;       // left x position of graph
graph_y = 32;       // top y position of graph
graph_w = 360;        // width of graph
graph_h = 270;        // height of grap

graph_xlines = 10;  // How many graph vertical lines should be on the graph IDEALLY
graph_ylines = 10;   // How many graph horizontal lines should be on the graph IDEALLY

keys_load()

coinsp1=0
coinsp2=0
coinsusedp1=0
coinsusedp2=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>120</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>select</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(obj_statsdisplay)=1
exit
if instance_number(obj_variables)=1
{
if obj_variables.final=0
alarm[0]=120
scr_agregagraph(obj_variables.pisop1)
scr_agregagraph2(obj_variables.pisop2)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(obj_variables)=1{
muertesp1=obj_variables.muertesp1
muertesp2=obj_variables.muertesp2
tpoderesp1=obj_variables.tpoderesp1
tpoderesp2=obj_variables.tpoderesp2}

if instance_number(obj_statsdisplay)=0
exit

if keyboard_check_pressed(global.kleft)
select-=1
if keyboard_check_pressed(global.kright)
select+=1

if select&lt;0
select=2
if select&gt;2
select=0

if keyboard_check(global.kok) and select=1
{
room_goto(rm_vs)
if global.music=1 {SS_StopSound(global.m_opciones)}
instance_destroy()
}

transition_kind=21

if keyboard_check(global.kok) and select=0
{
room_goto(rm_2player)
if global.music=1 {SS_StopSound(global.m_opciones)}
instance_destroy()
}

if keyboard_check(global.kok) and select=2
{
room_goto(rm_menuyaempezado)
if global.music=1 {SS_StopSound(global.m_opciones)}
instance_destroy()
}

if keyboard_check(vk_escape)
{
room_goto(rm_menuyaempezado)
if global.music=1 {SS_StopSound(global.m_opciones)}
instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="30">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(obj_statsdisplay)=0
exit

// Now what this code will now do, is
// Make the graph fit exactly into the graph_w
// and graph_h, using some simple parametric
// formulas.

var max_v, p_x, p_y; max_v = graph[0];
for (a = 1; a &lt; graph_total; a+= 1) max_v = max(max_v, graph[a]);
p_x = graph_w/(graph_total - 1);
p_x1 = graph_w/(graph_total1 - 1);
p_y = graph_h/max_v;


// Draw the Horizontal Lines
draw_set_color(make_color_rgb(119,102,71)); draw_set_valign(fa_middle);
for (a = 0; a &lt;= max_v; a+= ceil(max_v/graph_ylines))
{
    draw_line(graph_x, graph_y + graph_h - (a * p_y), graph_x + graph_w,  graph_y + graph_h - (a * p_y));
    draw_set_halign(fa_left);
    //draw_text(graph_x + graph_w + 3, graph_y + graph_h - (a * p_y), a);
    draw_set_halign(fa_right);
    draw_text(graph_x - 3, graph_y + graph_h - (a * p_y), a);
} draw_set_valign(fa_top); draw_set_halign(fa_left);

// Draw the Vertical Lines
draw_set_color(make_color_rgb(119,102,71)); draw_set_halign(fa_center);
for (a = 0; a &lt;= graph_total-1; a+= ceil(graph_total/graph_xlines))
{
    draw_line(graph_x + (a * p_x), graph_y, graph_x + (a * p_x), graph_y + graph_h);
    draw_set_valign(fa_top);
    draw_text(graph_x + (a * p_x), graph_y + graph_h + 3, a);
    draw_set_valign(fa_bottom);
    //draw_text(graph_x + (a * p_x), graph_y - 3, a);
} draw_set_valign(fa_top); draw_set_halign(fa_left);

// Draw the Graph Outline
//draw_set_color(c_white);
//draw_rectangle(graph_x, graph_y, graph_x + graph_w, graph_y + graph_h, 1);

// Draw the Data
draw_primitive_begin(pr_linestrip);
for (a = 0; a &lt; graph_total; a+= 1)
{
    draw_set_color(make_color_rgb(83,159,254));
    draw_vertex(graph_x + (a * p_x), graph_y + graph_h - (graph[a] * p_y));
    //draw_circle(graph_x + (a * p_x), graph_y + graph_h - (graph[a] * p_y), 3, 0);
}
draw_primitive_end();

if global.practice=1
exit

draw_primitive_begin(pr_linestrip);
for (a = 0; a &lt; graph_total1; a+= 1)
{
    draw_set_color(make_color_rgb(254,116,83));
    draw_vertex(graph_x + (a * p_x1), graph_y + graph_h - (graph1[a] * p_y));
    //draw_circle(graph_x + (a * p_x1), graph_y + graph_h - (graph1[a] * p_y), 3, 0);
}
draw_primitive_end();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
